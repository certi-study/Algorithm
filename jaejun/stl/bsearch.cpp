/* reference: https://stackoverflow.com/questions/20024634/how-can-i-optimize-binary-search */
int bst_op6(register int *arr, register int key) {
	register int m = N >> 1;
	register int l = 0;

	if (arr[m] <= key) // 21
		l = N - m;
	m = m >> 1;
	if (arr[l + m] <= key) //20
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key) //15
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key) // 10
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key) // 5
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;
	m = m >> 1;
	if (arr[l + m] <= key)
		l += m;

	if (l > N or arr[l] != key)
		return -1;
}